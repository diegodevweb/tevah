$(document).ready(function(){$(window).scroll(function(){this.scrollY>500?$(".scroll-up-btn").addClass("show"):$(".scroll-up-btn").removeClass("show")}),$(".scroll-up-btn").click(function(){$("html").animate({scrollTop:0})}),new Typed(".typing",{strings:["Landing pages","Sistemas e apps","Sites responsivos","E-commerces"],typeSpeed:100,backSpeed:60,loop:!0}),new Typed(".typing-2",{strings:["Landing pages","Sistemas e apps","Sites responsivos","E-commerces"],typeSpeed:100,backSpeed:60,loop:!0})});$(".menu-btn").click(function(){$(".navbar .menu").toggleClass("active"),$(".menu-btn i").toggleClass("active")});$(document).click(function(l){$(l.target).closest(".menu-btn, .navbar .menu").length||($(".navbar .menu").removeClass("active"),$("ion-icon").removeClass("menu-open"))});AOS.init({duration:1e3,once:!0});const o=document.querySelector(".card-carousel");document.querySelector(".card-carousel + .card-controller");class a{constructor(s=void 0){this.target=s}event(s){let e;this.target.addEventListener("mousedown",t=>{t.preventDefault(),e=s(t),window.addEventListener("mousemove",e),document.addEventListener("mouseleave",n),window.addEventListener("mouseup",n);function n(){window.removeEventListener("mousemove",e),window.removeEventListener("mouseup",n),document.removeEventListener("mouseleave",n),e(null)}}),this.target.addEventListener("touchstart",t=>{e=s(t),window.addEventListener("touchmove",e),window.addEventListener("touchend",n),document.body.addEventListener("mouseleave",n);function n(){window.removeEventListener("touchmove",e),window.removeEventListener("touchend",n),e(null)}})}getDistance(s){function e(t){let n,i;return"touches"in t?(n=t.touches[0].clientX,i=t.touches[0].clientY):(n=t.clientX,i=t.clientY),function(c){return c===null?s(null):"touches"in c?s({x:c.touches[0].clientX-n,y:c.touches[0].clientY-i}):s({x:c.clientX-n,y:c.clientY-i})}}this.event(e)}}class d extends a{constructor(s,e=void 0){super(s),this.container=s,this.controllerElement=e,this.cards=s.querySelectorAll(".card"),this.centerIndex=(this.cards.length-1)/2,this.cardWidth=this.cards[0].offsetWidth/this.container.offsetWidth*100,this.xScale={},window.addEventListener("resize",this.updateCardWidth.bind(this)),this.controllerElement&&this.controllerElement.addEventListener("keydown",this.controller.bind(this)),this.build(),super.getDistance(this.moveCards.bind(this))}updateCardWidth(){this.cardWidth=this.cards[0].offsetWidth/this.container.offsetWidth*100,this.build()}build(s=0){for(let e=0;e<this.cards.length;e++){const t=e-this.centerIndex,n=this.calcScale(t),i=this.calcScale2(t),c=-Math.abs(e-this.centerIndex),r=this.calcPos(t,i);this.xScale[t]=this.cards[e],this.updateCards(this.cards[e],{x:t,scale:n,leftPos:r,zIndex:c})}}controller(s){const e={...this.xScale};if(s.keyCode===39)for(let t in this.xScale){const n=parseInt(t)-1<-this.centerIndex?this.centerIndex:parseInt(t)-1;e[n]=this.xScale[t]}if(s.keyCode==37)for(let t in this.xScale){const n=parseInt(t)+1>this.centerIndex?-this.centerIndex:parseInt(t)+1;e[n]=this.xScale[t]}this.xScale=e;for(let t in e){const n=this.calcScale(t),i=this.calcScale2(t),c=this.calcPos(t,i),r=-Math.abs(t);this.updateCards(this.xScale[t],{x:t,scale:n,leftPos:c,zIndex:r})}}calcPos(s,e){let t;return s<0?(t=(e*100-this.cardWidth)/2,t):s>0?(t=100-(e*100+this.cardWidth)/2,t):(t=100-(e*100+this.cardWidth)/2,t)}updateCards(s,e){(e.x||e.x==0)&&s.setAttribute("data-x",e.x),(e.scale||e.scale==0)&&(s.style.transform=`scale(${e.scale})`,e.scale==0?s.style.opacity=e.scale:s.style.opacity=1),e.leftPos&&(s.style.left=`${e.leftPos}%`),(e.zIndex||e.zIndex==0)&&(e.zIndex==0?s.classList.add("highlight"):s.classList.remove("highlight"),s.style.zIndex=e.zIndex)}calcScale2(s){let e;if(s<=0)return e=1- -1/5*s,e;if(s>0)return e=1-1/5*s,e}calcScale(s){const e=1-.2*Math.pow(s,2);return e<=0?0:e}checkOrdering(s,e,t){const n=parseInt(s.dataset.x),i=Math.round(t);let c=e;e!==e+i&&(e+i>n?e+i>this.centerIndex&&(c=e+i-1-this.centerIndex-i+-this.centerIndex):e+i<n&&e+i<-this.centerIndex&&(c=e+i+1+this.centerIndex-i+this.centerIndex),this.xScale[c+i]=s);const r=-Math.abs(c+i);return this.updateCards(s,{zIndex:r}),c}moveCards(s){let e;if(s!=null)this.container.classList.remove("smooth-return"),e=s.x/250;else{this.container.classList.add("smooth-return"),e=0;for(let t in this.xScale)this.updateCards(this.xScale[t],{x:t,zIndex:Math.abs(Math.abs(t)-this.centerIndex)})}for(let t=0;t<this.cards.length;t++){const n=this.checkOrdering(this.cards[t],parseInt(this.cards[t].dataset.x),e),i=this.calcScale(n+e),c=this.calcScale2(n+e),r=this.calcPos(n+e,c);this.updateCards(this.cards[t],{scale:i,leftPos:r})}}}new d(o);
